{"version":3,"sources":["Node.js","Canvas.js","App.js","index.js"],"names":["Node","fabric","util","createClass","Group","type","superType","initialize","options","this","label","Text","fontSize","fontFamily","fontWeight","fill","node","Rect","rx","ry","width","height","stroke","strokeWidth","option","Object","assign","id","v4","originX","originY","hasRotatingPoint","hasControls","callSuper","set","top","left","toObject","object","extend","get","_render","ctx","SubProcess","children","addChild","child","includes","push","taskNode","groupNode","Canvas","containerRef","useRef","useState","fabricCanvas","setCanvas","useEffect","preserveObjectStacking","selection","defaultCursor","backgroundColor","add","window","node1","node2","canvas","on","ev","target","subProcess","setCoords","Array","isArray","offX","vals","offY","forEach","bringToFront","renderAll","forEachObject","obj","color","intersectsWithObject","_objects","objects","getObjects","reduce","prev","curr","onClick","console","log","map","x","ref","style","border","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.098cd302.chunk.js","sourcesContent":["import { fabric } from \"fabric\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst Node = fabric.util.createClass(fabric.Group, {\r\n  type: \"node\",\r\n  superType: \"node\",\r\n  initialize(options) {\r\n    options = options || {};\r\n    let name = \"Default Node\";\r\n    this.label = new fabric.Text(name || \"Default Node\", {\r\n      fontSize: 16,\r\n      fontFamily: \"polestar\",\r\n      fontWeight: 500,\r\n      fill: \"rgba(255, 255, 255, 0.8)\",\r\n    });\r\n    const rect = new fabric.Rect({\r\n      rx: 10,\r\n      ry: 10,\r\n      width: 100,\r\n      height: 50,\r\n      fill: options.fill || \"rgba(0, 0, 0, 0.3)\",\r\n      stroke: options.stroke || \"rgba(0, 0, 0, 0)\",\r\n      strokeWidth: 2,\r\n    });\r\n    const node = [rect, this.label];\r\n    const option = Object.assign({}, options, {\r\n      id: options.id || v4(),\r\n      width: 100,\r\n      height: 50,\r\n      originX: \"left\",\r\n      originY: \"top\",\r\n      hasRotatingPoint: true,\r\n      hasControls: true,\r\n    });\r\n\r\n    this.callSuper(\"initialize\", node, option);\r\n    this.label.set({\r\n      top: this.label.top + this.label.height / 2 + 4,\r\n      left: this.label.left + 35,\r\n    });\r\n  },\r\n  toObject() {\r\n    return fabric.util.object.extend(this.callSuper(\"toObject\"), {\r\n      id: this.get(\"id\"),\r\n    });\r\n  },\r\n  _render(ctx) {\r\n    this.callSuper(\"_render\", ctx);\r\n  },\r\n});\r\n\r\nconst SubProcess = fabric.util.createClass(fabric.Group, {\r\n  type: \"subProcess\",\r\n  superType: \"subProcess\",\r\n  children: [],\r\n  initialize(options) {\r\n    options = options || {};\r\n    let name = \"Default Node\";\r\n    this.label = new fabric.Text(name || \"Default Node\", {\r\n      fontSize: 16,\r\n      fontFamily: \"polestar\",\r\n      fontWeight: 500,\r\n      fill: \"rgba(0, 0, 0, 0.8)\",\r\n    });\r\n    const rect = new fabric.Rect({\r\n      rx: 10,\r\n      ry: 10,\r\n      width: 300,\r\n      height: 300,\r\n      fill: options.fill || \"rgba(0, 0, 0, 0.3)\",\r\n      stroke: options.stroke || \"rgba(255, 0, 0, 0)\",\r\n      strokeWidth: 2,\r\n    });\r\n    const node = [rect, this.label];\r\n    const option = Object.assign({}, options, {\r\n      id: options.id || v4(),\r\n      width: 300,\r\n      height: 300,\r\n      originX: \"left\",\r\n      originY: \"top\",\r\n      hasRotatingPoint: true,\r\n      hasControls: true,\r\n    });\r\n    this.callSuper(\"initialize\", node, option);\r\n    this.label.set({\r\n      top: this.label.top + this.label.height / 2 + 4,\r\n      left: this.label.left + 35,\r\n    });\r\n  },\r\n  toObject() {\r\n    return fabric.util.object.extend(this.callSuper(\"toObject\"), {\r\n      id: this.get(\"id\"),\r\n      children: this.get(\"children\"),\r\n    });\r\n  },\r\n  addChild(child) {\r\n    if (!this.children.includes(child)) {\r\n      this.children.push(child);\r\n    }\r\n  },\r\n  _render(ctx) {\r\n    this.callSuper(\"_render\", ctx);\r\n  },\r\n});\r\n\r\nexport const taskNode = new Node({\r\n  id: \"task1\",\r\n  top: 100,\r\n  left: 100,\r\n  fill: \"red\",\r\n  hasControls: true,\r\n  hasRotatingPoint: false,\r\n});\r\n\r\nexport const groupNode = new SubProcess({\r\n  id: \"process1\",\r\n  top: 200,\r\n  left: 200,\r\n  //strokeDashArray: [10, 10],\r\n  stroke: \"black\",\r\n  strokeWidth: 10,\r\n  fill: \"rgba(0,0,0,0)\",\r\n  hasControls: true,\r\n  hasRotatingPoint: false,\r\n});\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport { groupNode, taskNode } from \"./Node\";\r\n\r\nconst Canvas = () => {\r\n  const containerRef = useRef(null);\r\n  const [fabricCanvas, setCanvas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const canvasOption = {\r\n      preserveObjectStacking: true,\r\n      width: 700,\r\n      height: 700,\r\n      selection: true,\r\n      defaultCursor: \"default\",\r\n      backgroundColor: \"#f3f3f3\",\r\n    };\r\n\r\n    const fabricCanvas = new fabric.Canvas(\"canvasId\", canvasOption);\r\n\r\n    groupNode.addChild(taskNode);\r\n    fabricCanvas.add(taskNode);\r\n    fabricCanvas.add(groupNode);\r\n\r\n    window.node1 = taskNode;\r\n    window.node2 = groupNode;\r\n\r\n    window.canvas = fabricCanvas;\r\n    setCanvas(fabricCanvas);\r\n\r\n    fabricCanvas.on({\r\n      \"object:moving\": onChange,\r\n      \"mouse:down\": mouseDown,\r\n    });\r\n\r\n    let vals = {};\r\n\r\n    function mouseDown(ev) {\r\n      const objects = fabricCanvas.getObjects();\r\n      vals = objects.reduce((prev, curr) => {\r\n        return curr\r\n          ? { ...prev, [curr.id]: { top: curr.top, left: curr.left } }\r\n          : prev;\r\n      }, {});\r\n    }\r\n\r\n    function onChange(ev) {\r\n      if (ev.target.superType === \"subProcess\") {\r\n        const subProcess = ev.target;\r\n        subProcess.setCoords();\r\n        if (Array.isArray(ev.target.children)) {\r\n          const offX = subProcess.left - vals[subProcess.id].left;\r\n          const offY = subProcess.top - vals[subProcess.id].top;\r\n          ev.target.children.forEach((child) => {\r\n            child.left = vals[child.id].left + offX;\r\n            child.top = vals[child.id].top + offY;\r\n            child.setCoords();\r\n            fabricCanvas.bringToFront(child);\r\n          });\r\n        }\r\n        fabricCanvas.renderAll();\r\n      }\r\n\r\n      fabricCanvas.forEachObject(function (obj) {\r\n        if (obj === ev.target) return;\r\n        if (obj.superType === \"subProcess\") {\r\n          const subProcess = obj;\r\n          fabricCanvas.bringToFront(ev.target);\r\n          const color = ev.target.intersectsWithObject(subProcess)\r\n            ? \"red\"\r\n            : \"black\";\r\n          subProcess._objects[0].set(\"stroke\", color);\r\n          fabricCanvas.renderAll();\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleExport = () => {\r\n    const obj = fabricCanvas.toObject().objects;\r\n    console.log(obj);\r\n    console.log(obj.map((x) => x.id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleExport}>Serialize</button>\r\n      <div\r\n        ref={containerRef}\r\n        style={{ width: 700, height: 700, border: \"1px solid gray\" }}\r\n      >\r\n        <canvas style={{ width: \"100%\", height: \"100%\" }} id={`canvasId`} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\nimport Canvas from \"./Canvas\";\n\nconst App = ()  => {\n  return <Canvas />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}