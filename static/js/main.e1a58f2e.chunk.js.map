{"version":3,"sources":["Node.js","Canvas.js","App.js","index.js"],"names":["Node","fabric","util","createClass","Group","type","superType","initialize","options","this","label","Text","fontSize","fontFamily","fontWeight","fill","node","Rect","rx","ry","width","height","stroke","strokeWidth","option","Object","assign","id","v4","originX","originY","hasRotatingPoint","hasControls","callSuper","set","top","left","toObject","object","extend","get","_render","ctx","SubProcess","children","addChild","child","includes","push","removeChild","removeFromArray","Canvas","containerRef","useRef","useState","fabricCanvas","setCanvas","useEffect","preserveObjectStacking","selection","defaultCursor","backgroundColor","add","window","canvas","on","ev","target","subProcess","setCoords","Array","isArray","offX","vals","offY","forEach","bringToFront","renderAll","forEachObject","obj","color","intersectsWithObject","_objects","task","topBound","bottomBound","leftBound","rightBound","Math","min","max","objects","getObjects","reduce","prev","curr","onClick","console","log","map","x","ref","style","border","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1a58f2e.chunk.js","sourcesContent":["import { fabric } from \"fabric\";\r\nimport { v4 } from \"uuid\";\r\n\r\nexport const Node = fabric.util.createClass(fabric.Group, {\r\n  type: \"node\",\r\n  superType: \"node\",\r\n  initialize(options) {\r\n    options = options || {};\r\n    let name = \"Default Node\";\r\n    this.label = new fabric.Text(name || \"Default Node\", {\r\n      fontSize: 16,\r\n      fontFamily: \"polestar\",\r\n      fontWeight: 500,\r\n      fill: \"rgba(255, 255, 255, 0.8)\",\r\n    });\r\n    const rect = new fabric.Rect({\r\n      rx: 10,\r\n      ry: 10,\r\n      width: 100,\r\n      height: 50,\r\n      fill: options.fill || \"rgba(0, 0, 0, 0.3)\",\r\n      stroke: options.stroke || \"rgba(0, 0, 0, 0)\",\r\n      strokeWidth: 2,\r\n    });\r\n    const node = [rect, this.label];\r\n    const option = Object.assign({}, options, {\r\n      id: options.id || v4(),\r\n      width: 100,\r\n      height: 50,\r\n      originX: \"left\",\r\n      originY: \"top\",\r\n      hasRotatingPoint: true,\r\n      hasControls: true,\r\n    });\r\n\r\n    this.callSuper(\"initialize\", node, option);\r\n    this.label.set({\r\n      top: this.label.top + this.label.height / 2 + 4,\r\n      left: this.label.left + 35,\r\n    });\r\n  },\r\n  toObject() {\r\n    return fabric.util.object.extend(this.callSuper(\"toObject\"), {\r\n      id: this.get(\"id\"),\r\n    });\r\n  },\r\n  _render(ctx) {\r\n    this.callSuper(\"_render\", ctx);\r\n  },\r\n});\r\n\r\nexport const SubProcess = fabric.util.createClass(fabric.Group, {\r\n  type: \"subProcess\",\r\n  superType: \"subProcess\",\r\n  children: [],\r\n  initialize(options) {\r\n    options = options || {};\r\n    let name = \"Default Node\";\r\n    this.label = new fabric.Text(name || \"Default Node\", {\r\n      fontSize: 16,\r\n      fontFamily: \"polestar\",\r\n      fontWeight: 500,\r\n      fill: \"rgba(0, 0, 0, 0.8)\",\r\n    });\r\n    const rect = new fabric.Rect({\r\n      rx: 10,\r\n      ry: 10,\r\n      width: 300,\r\n      height: 300,\r\n      fill: options.fill || \"rgba(0, 0, 0, 0.3)\",\r\n      stroke: options.stroke || \"rgba(255, 0, 0, 0)\",\r\n      strokeWidth: 2,\r\n    });\r\n    const node = [rect, this.label];\r\n    const option = Object.assign({}, options, {\r\n      id: options.id || v4(),\r\n      width: 300,\r\n      height: 300,\r\n      originX: \"left\",\r\n      originY: \"top\",\r\n      hasRotatingPoint: true,\r\n      hasControls: true,\r\n    });\r\n    this.callSuper(\"initialize\", node, option);\r\n    this.label.set({\r\n      top: this.label.top + this.label.height / 2 + 4,\r\n      left: this.label.left + 35,\r\n    });\r\n  },\r\n  toObject() {\r\n    return fabric.util.object.extend(this.callSuper(\"toObject\"), {\r\n      id: this.get(\"id\"),\r\n      children: this.get(\"children\"),\r\n    });\r\n  },\r\n  addChild(child) {\r\n    if (!this.children.includes(child)) {\r\n      this.children.push(child);\r\n    }\r\n  },\r\n  removeChild(child) {\r\n    fabric.util.removeFromArray(this.children, child);\r\n  },\r\n  _render(ctx) {\r\n    this.callSuper(\"_render\", ctx);\r\n  },\r\n});\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport { SubProcess, Node } from \"./Node\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst Canvas = () => {\r\n  const containerRef = useRef(null);\r\n  const [fabricCanvas, setCanvas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const canvasOption = {\r\n      preserveObjectStacking: true,\r\n      width: 700,\r\n      height: 700,\r\n      selection: true,\r\n      defaultCursor: \"default\",\r\n      backgroundColor: \"#f3f3f3\",\r\n    };\r\n\r\n    const fabricCanvas = new fabric.Canvas(\"canvasId\", canvasOption);\r\n\r\n    fabricCanvas.add(\r\n      new Node({\r\n        id: \"task1\",\r\n        top: 100,\r\n        left: 100,\r\n        fill: \"red\",\r\n        hasControls: true,\r\n        hasRotatingPoint: false,\r\n      })\r\n    );\r\n    fabricCanvas.add(\r\n      new SubProcess({\r\n        id: \"process1\",\r\n        top: 200,\r\n        left: 200,\r\n        stroke: \"black\",\r\n        strokeWidth: 10,\r\n        fill: \"rgba(0,0,0,0)\",\r\n        hasControls: true,\r\n        hasRotatingPoint: false,\r\n      })\r\n    );\r\n\r\n    window.canvas = fabricCanvas;\r\n    setCanvas(fabricCanvas);\r\n\r\n    fabricCanvas.on({\r\n      \"object:moving\": onChange,\r\n      \"mouse:down\": mouseDown,\r\n    });\r\n\r\n    let vals = {};\r\n\r\n    function mouseDown(ev) {\r\n      const objects = fabricCanvas.getObjects();\r\n      vals = objects.reduce((prev, curr) => {\r\n        return curr\r\n          ? { ...prev, [curr.id]: { top: curr.top, left: curr.left } }\r\n          : prev;\r\n      }, {});\r\n    }\r\n\r\n    function onChange(ev) {\r\n      if (ev.target.superType === \"subProcess\") {\r\n        const subProcess = ev.target;\r\n        subProcess.setCoords();\r\n        if (Array.isArray(ev.target.children)) {\r\n          const offX = subProcess.left - vals[subProcess.id].left;\r\n          const offY = subProcess.top - vals[subProcess.id].top;\r\n          ev.target.children.forEach((child) => {\r\n            child.left = vals[child.id].left + offX;\r\n            child.top = vals[child.id].top + offY;\r\n            child.setCoords();\r\n            fabricCanvas.bringToFront(child);\r\n          });\r\n        }\r\n        fabricCanvas.renderAll();\r\n      }\r\n\r\n      fabricCanvas.forEachObject(function (obj) {\r\n        if (obj === ev.target) return;\r\n        if (obj.superType === \"subProcess\") {\r\n          /* start: border color when entering subProcess */\r\n          const subProcess = obj;\r\n          fabricCanvas.bringToFront(ev.target);\r\n          const color = ev.target.intersectsWithObject(subProcess)\r\n            ? \"red\"\r\n            : \"black\";\r\n          subProcess._objects[0].set(\"stroke\", color);\r\n          fabricCanvas.renderAll();\r\n          /* end: border color when entering subProcess */\r\n\r\n          /* start: remove task from subProcess when not intersecting */\r\n          if (!ev.target.intersectsWithObject(subProcess)) {\r\n            subProcess.removeChild(ev.target);\r\n          }\r\n          /* end: remove task from subProcess when not intersecting */\r\n\r\n          /* start: limit task movement withing the group */\r\n          if (\r\n            ev.target.superType === \"node\" &&\r\n            ev.target.intersectsWithObject(subProcess)\r\n          ) {\r\n            const task = ev.target;\r\n\r\n            const topBound = subProcess.top;\r\n            const bottomBound = topBound + subProcess.height;\r\n            const leftBound = subProcess.left;\r\n            const rightBound = leftBound + subProcess.width;\r\n\r\n            subProcess.addChild(task);\r\n\r\n            task.left = Math.min(\r\n              Math.max(task.left, leftBound),\r\n              rightBound - task.width\r\n            );\r\n            task.top = Math.min(\r\n              Math.max(task.top, topBound),\r\n              bottomBound - task.height\r\n            );\r\n          }\r\n        }\r\n        /* end: remove task from subProcess when not intersecting */\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleExport = () => {\r\n    const obj = fabricCanvas.toObject().objects;\r\n    console.log(obj);\r\n    console.log(obj.map((x) => x.id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleExport}>Serialize</button>\r\n      <button\r\n        onClick={() => {\r\n          fabricCanvas.add(\r\n            new Node({\r\n              id: v4(),\r\n              top: 50,\r\n              left: 50,\r\n              fill: \"red\",\r\n              hasControls: true,\r\n              hasRotatingPoint: false,\r\n            })\r\n          );\r\n        }}\r\n      >\r\n        Add Task\r\n      </button>\r\n      <div\r\n        ref={containerRef}\r\n        style={{ width: 700, height: 700, border: \"1px solid gray\" }}\r\n      >\r\n        <canvas style={{ width: \"100%\", height: \"100%\" }} id={`canvasId`} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\nimport Canvas from \"./Canvas\";\n\nconst App = ()  => {\n  return <Canvas />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}