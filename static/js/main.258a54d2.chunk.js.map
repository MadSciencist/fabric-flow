{"version":3,"sources":["Node.js","Canvas.js","App.js","index.js"],"names":["Node","fabric","util","createClass","Group","type","superType","parentId","initialize","options","this","label","Text","fontSize","fontFamily","fontWeight","fill","node","Rect","rx","ry","width","height","stroke","strokeWidth","option","Object","assign","id","v4","originX","originY","hasRotatingPoint","hasControls","callSuper","set","top","left","toObject","object","extend","get","_render","ctx","SubProcess","children","map","x","addChild","child","includes","push","removeChild","removeFromArray","Canvas","containerRef","useRef","useState","fabricCanvas","setCanvas","useEffect","preserveObjectStacking","selection","defaultCursor","backgroundColor","add","window","canvas","on","ev","target","subProcess","setCoords","Array","isArray","offX","vals","offY","forEach","bringToFront","renderAll","forEachObject","obj","color","intersectsWithObject","_objects","task","topBound","bottomBound","leftBound","rightBound","Math","min","max","objects","getObjects","reduce","prev","curr","onClick","nodes","mapObjectToNode","properties","console","log","clear","mapToTask","ret","ref","style","border","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.258a54d2.chunk.js","sourcesContent":["import { fabric } from \"fabric\";\r\nimport { v4 } from \"uuid\";\r\n\r\nexport const Node = fabric.util.createClass(fabric.Group, {\r\n  type: \"node\",\r\n  superType: \"node\",\r\n  parentId: null,\r\n  initialize(options) {\r\n    options = options || {};\r\n    let name = \"Default Node\";\r\n    this.label = new fabric.Text(name || \"Default Node\", {\r\n      fontSize: 16,\r\n      fontFamily: \"polestar\",\r\n      fontWeight: 500,\r\n      fill: \"rgba(255, 255, 255, 0.8)\",\r\n    });\r\n    const rect = new fabric.Rect({\r\n      rx: 10,\r\n      ry: 10,\r\n      width: 100,\r\n      height: 50,\r\n      fill: options.fill || \"rgba(0, 0, 0, 0.3)\",\r\n      stroke: options.stroke || \"rgba(0, 0, 0, 0)\",\r\n      strokeWidth: 2,\r\n    });\r\n    const node = [rect, this.label];\r\n    const option = Object.assign({}, options, {\r\n      id: options.id || v4(),\r\n      width: 100,\r\n      height: 50,\r\n      originX: \"left\",\r\n      originY: \"top\",\r\n      hasRotatingPoint: true,\r\n      hasControls: true,\r\n    });\r\n\r\n    this.callSuper(\"initialize\", node, option);\r\n    this.label.set({\r\n      top: this.label.top + this.label.height / 2 + 4,\r\n      left: this.label.left + 35,\r\n    });\r\n  },\r\n  toObject() {\r\n    return fabric.util.object.extend(this.callSuper(\"toObject\"), {\r\n      id: this.get(\"id\"),\r\n      superType: this.get(\"superType\"),\r\n      parentId: this.get(\"parentId\"),\r\n    });\r\n  },\r\n  _render(ctx) {\r\n    this.callSuper(\"_render\", ctx);\r\n  },\r\n});\r\n\r\nexport const SubProcess = fabric.util.createClass(fabric.Group, {\r\n  type: \"subProcess\",\r\n  superType: \"subProcess\",\r\n  children: [],\r\n  initialize(options) {\r\n    options = options || {};\r\n    this.children = options.children || [];\r\n    let name = \"Default Node\";\r\n    this.label = new fabric.Text(name || \"Default Node\", {\r\n      fontSize: 16,\r\n      fontFamily: \"polestar\",\r\n      fontWeight: 500,\r\n      fill: \"rgba(0, 0, 0, 0.8)\",\r\n    });\r\n    const rect = new fabric.Rect({\r\n      rx: 10,\r\n      ry: 10,\r\n      width: 300,\r\n      height: 300,\r\n      fill: options.fill || \"rgba(0, 0, 0, 0.3)\",\r\n      stroke: options.stroke || \"rgba(255, 0, 0, 0)\",\r\n      strokeWidth: 2,\r\n    });\r\n    const node = [rect, this.label];\r\n    const option = Object.assign({}, options, {\r\n      id: options.id || v4(),\r\n      width: 300,\r\n      height: 300,\r\n      originX: \"left\",\r\n      originY: \"top\",\r\n      hasRotatingPoint: true,\r\n      hasControls: true,\r\n    });\r\n    this.callSuper(\"initialize\", node, option);\r\n    this.label.set({\r\n      top: this.label.top + this.label.height / 2 + 4,\r\n      left: this.label.left + 35,\r\n    });\r\n  },\r\n  toObject() {\r\n    return fabric.util.object.extend(this.callSuper(\"toObject\"), {\r\n      id: this.get(\"id\"),\r\n      superType: this.get(\"superType\"),\r\n      children: this.get(\"children\").map((x) => x.toObject()),\r\n    });\r\n  },\r\n  addChild(child) {\r\n    if (!this.children.includes(child)) {\r\n      child.set(\"parentId\", this.id);\r\n      this.children.push(child);\r\n    }\r\n  },\r\n  removeChild(child) {\r\n    child.set(\"parentId\", null);\r\n    fabric.util.removeFromArray(this.children, child);\r\n  },\r\n  _render(ctx) {\r\n    this.callSuper(\"_render\", ctx);\r\n  },\r\n});\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport { SubProcess, Node } from \"./Node\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst Canvas = () => {\r\n  const containerRef = useRef(null);\r\n  const [fabricCanvas, setCanvas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const canvasOption = {\r\n      preserveObjectStacking: true,\r\n      width: 700,\r\n      height: 700,\r\n      selection: true,\r\n      defaultCursor: \"default\",\r\n      backgroundColor: \"#f3f3f3\",\r\n    };\r\n\r\n    const fabricCanvas = new fabric.Canvas(\"canvasId\", canvasOption);\r\n\r\n    fabricCanvas.add(\r\n      new Node({\r\n        id: \"task1\",\r\n        top: 100,\r\n        left: 100,\r\n        fill: \"red\",\r\n        hasControls: true,\r\n        hasRotatingPoint: false,\r\n      })\r\n    );\r\n    fabricCanvas.add(\r\n      new SubProcess({\r\n        id: \"process1\",\r\n        top: 200,\r\n        left: 200,\r\n        stroke: \"black\",\r\n        strokeWidth: 10,\r\n        fill: \"rgba(0,0,0,0)\",\r\n        hasControls: true,\r\n        hasRotatingPoint: false,\r\n      })\r\n    );\r\n\r\n    window.canvas = fabricCanvas;\r\n    setCanvas(fabricCanvas);\r\n\r\n    fabricCanvas.on({\r\n      \"object:moving\": onChange,\r\n      \"mouse:down\": mouseDown,\r\n    });\r\n\r\n    let vals = {};\r\n\r\n    function mouseDown(ev) {\r\n      const objects = fabricCanvas.getObjects();\r\n      vals = objects.reduce((prev, curr) => {\r\n        return curr\r\n          ? { ...prev, [curr.id]: { top: curr.top, left: curr.left } }\r\n          : prev;\r\n      }, {});\r\n    }\r\n\r\n    function onChange(ev) {\r\n      if (ev.target.superType === \"subProcess\") {\r\n        const subProcess = ev.target;\r\n        subProcess.setCoords();\r\n        if (Array.isArray(ev.target.children)) {\r\n          const offX = subProcess.left - vals[subProcess.id].left;\r\n          const offY = subProcess.top - vals[subProcess.id].top;\r\n          ev.target.children.forEach((child) => {\r\n            child.left = vals[child.id].left + offX;\r\n            child.top = vals[child.id].top + offY;\r\n            child.setCoords();\r\n            fabricCanvas.bringToFront(child);\r\n          });\r\n        }\r\n        fabricCanvas.renderAll();\r\n      }\r\n\r\n      fabricCanvas.forEachObject(function (obj) {\r\n        if (obj === ev.target) return;\r\n        if (obj.superType === \"subProcess\") {\r\n          /* start: border color when entering subProcess */\r\n          const subProcess = obj;\r\n          fabricCanvas.bringToFront(ev.target);\r\n          const color = ev.target.intersectsWithObject(subProcess)\r\n            ? \"red\"\r\n            : \"black\";\r\n          subProcess._objects[0].set(\"stroke\", color);\r\n          fabricCanvas.renderAll();\r\n          /* end: border color when entering subProcess */\r\n\r\n          /* start: remove task from subProcess when not intersecting */\r\n          if (!ev.target.intersectsWithObject(subProcess)) {\r\n            subProcess.removeChild(ev.target);\r\n          }\r\n          /* end: remove task from subProcess when not intersecting */\r\n\r\n          /* start: limit task movement withing the group */\r\n          if (\r\n            ev.target.superType === \"node\" &&\r\n            ev.target.intersectsWithObject(subProcess)\r\n          ) {\r\n            const task = ev.target;\r\n\r\n            const topBound = subProcess.top;\r\n            const bottomBound = topBound + subProcess.height;\r\n            const leftBound = subProcess.left;\r\n            const rightBound = leftBound + subProcess.width;\r\n\r\n            subProcess.addChild(task);\r\n\r\n            task.left = Math.min(\r\n              Math.max(task.left, leftBound),\r\n              rightBound - task.width\r\n            );\r\n            task.top = Math.min(\r\n              Math.max(task.top, topBound),\r\n              bottomBound - task.height\r\n            );\r\n          }\r\n        }\r\n        /* end: remove task from subProcess when not intersecting */\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleExport = () => {\r\n    const { objects } = fabricCanvas.toObject();\r\n    const nodes = [];\r\n\r\n    const mapObjectToNode = (object) => {\r\n      const node = {\r\n        id: object.id,\r\n        superType: object.superType,\r\n        parentId: object.parentId,\r\n        properties: {\r\n          left: object.left,\r\n          top: object.top,\r\n        },\r\n      };\r\n      if (object.children) {\r\n        node.children = object.children?.map((child) => mapObjectToNode(child));\r\n      }\r\n\r\n      return node;\r\n    };\r\n\r\n    objects.forEach((object) => {\r\n      if (object.superType === \"node\" || object.superType === \"subProcess\") {\r\n        if (!object.parentId) {\r\n          // we care just about top level object - others will be added recursively\r\n          nodes.push(mapObjectToNode(object));\r\n        }\r\n      }\r\n    });\r\n\r\n    window.nodes = nodes;\r\n    console.log(nodes);\r\n  };\r\n\r\n  const loadSnapshop = () => {\r\n    console.log(\"loading\", window.nodes);\r\n    if (!window.nodes) return;\r\n    fabricCanvas.clear();\r\n\r\n    const mapToTask = (node) => {\r\n      let ret = new Node({\r\n        id: node.id,\r\n        top: node.properties.top,\r\n        left: node.properties.left,\r\n        fill: \"red\",\r\n        parentId: node.parentId,\r\n      });\r\n      fabricCanvas.add(ret);\r\n      return ret;\r\n    };\r\n\r\n    window.nodes.forEach((node) => {\r\n      if (node.superType === \"node\") {\r\n        mapToTask(node);\r\n      } else if (node.superType === \"subProcess\") {\r\n        fabricCanvas.add(\r\n          new SubProcess({\r\n            id: node.id,\r\n            top: node.properties.top,\r\n            left: node.properties.left,\r\n            children: node.children.map((x) => mapToTask(x)),\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleExport}>Serialize</button>\r\n      <button onClick={loadSnapshop}>Load snapshop</button>\r\n      <button\r\n        onClick={() => {\r\n          fabricCanvas.add(\r\n            new Node({\r\n              id: v4(),\r\n              top: 50,\r\n              left: 50,\r\n              fill: \"red\",\r\n              hasControls: true,\r\n              hasRotatingPoint: false,\r\n            })\r\n          );\r\n        }}\r\n      >\r\n        Add Task\r\n      </button>\r\n      <div\r\n        ref={containerRef}\r\n        style={{ width: 700, height: 700, border: \"1px solid gray\" }}\r\n      >\r\n        <canvas style={{ width: \"100%\", height: \"100%\" }} id={`canvasId`} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\nimport Canvas from \"./Canvas\";\n\nconst App = ()  => {\n  return <Canvas />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}